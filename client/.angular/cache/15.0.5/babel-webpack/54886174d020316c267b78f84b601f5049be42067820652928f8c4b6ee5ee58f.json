{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'client'; //primjer koriscenja typescripte - Typescript po defaultu prepozna vrijednsoti, ali bolje ih je navoditi\n  }\n  //Kreira se metoda koja ce biti zasluzna za inicijalizaciju  sa implements OnInit u definisanju klase\n  ngOnInit() {\n    this.http.get(\"https://localhost:7026/User/get-all\").subscribe({\n      next: /* kazemo sta ce se desit kad nam url vrati podatke */response => this.user = response,\n      error: /* kazemo sta ce bit ako pukne */error => {\n        console.log(error);\n      },\n      complete: /* na kraju sta ce bit */() => {\n        console.log('Request has completed');\n      }\n    }); //Observable guglat malo o tome subskripcije i tkao to\n  }\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 1,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.title, \"\\n\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,UAAK,GAAW,QAAQ,CAAC,CAAC;EAK1B;EACA;EACAC,QAAQ;IACN,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,qCAAqC,CAAC,CAACC,SAAS,CAAC;MAC7DC,IAAI,EAAE,sDAAwDC,QAAQ,IAAK,IAAI,CAACC,IAAI,GAAGD,QAAQ;MAC/FE,KAAK,EAAE,iCAAmCA,KAAK,IAAI;QAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAAA,CAAC;MACxEG,QAAQ,EAAE,yBAA0B,MAAK;QAAEF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAAA;KAChF,CAAC,EAAC;EACL;;;AAdWX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAa;EAAAC;EAAAC;EAAAC;IAAA;MCPzBC,0BAAI;MAACA,YACL;MAAAA,iBAAK;;;MADAA,eACL;MADKA,2CACL","names":["AppComponent","constructor","http","ngOnInit","get","subscribe","next","response","user","error","console","log","complete","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Jasim\\Desktop\\ANGULAR\\client\\src\\app\\app.component.ts","C:\\Users\\Jasim\\Desktop\\ANGULAR\\client\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title: string = 'client'; //primjer koriscenja typescripte - Typescript po defaultu prepozna vrijednsoti, ali bolje ih je navoditi\n  user: any; //Iskljucivanje typescripte  - kao u javi varijable moze biti bilo kakvog tipa \n  constructor(private http: HttpClient) \n  {\n    \n  }\n  //Kreira se metoda koja ce biti zasluzna za inicijalizaciju  sa implements OnInit u definisanju klase\n  ngOnInit(): void {\n    this.http.get(\"https://localhost:7026/User/get-all\").subscribe({\n      next: /* kazemo sta ce se desit kad nam url vrati podatke */ (response) => this.user = response,\n      error: /* kazemo sta ce bit ako pukne */ (error) => {console.log(error)},\n      complete: /* na kraju sta ce bit */ () => {console.log('Request has completed')} \n    }) //Observable guglat malo o tome subskripcije i tkao to\n  }\n  \n}\n","<h1> {{ title }}\n</h1>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}